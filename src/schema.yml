openapi: 3.0.3
info:
  title: Your Project API
  version: 0.0.0
paths:
  /api/cars/:
    get:
      operationId: cars_list
      parameters:
      - in: query
        name: brand
        schema:
          type: string
      - in: query
        name: fuel_type
        schema:
          type: string
      - in: query
        name: mileage_max
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Пробег
      - in: query
        name: mileage_min
        schema:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Пробег
      - in: query
        name: model
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price_max
        schema:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Цена
      - in: query
        name: price_min
        schema:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Цена
      - in: query
        name: transmission
        schema:
          type: string
      - in: query
        name: year
        schema:
          type: integer
      tags:
      - cars
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCarList'
          description: ''
    post:
      operationId: cars_create
      tags:
      - cars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Car'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
  /api/cars/{id}/:
    get:
      operationId: cars_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this car.
        required: true
      tags:
      - cars
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    put:
      operationId: cars_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this car.
        required: true
      tags:
      - cars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Car'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    patch:
      operationId: cars_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this car.
        required: true
      tags:
      - cars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCar'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    delete:
      operationId: cars_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this car.
        required: true
      tags:
      - cars
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Car:
      type: object
      properties:
        brand:
          type: string
          maxLength: 128
        model:
          type: string
          maxLength: 256
        year:
          type: integer
          maximum: 2024
          minimum: 1886
        fuel_type:
          $ref: '#/components/schemas/FuelTypeEnum'
        transmission:
          $ref: '#/components/schemas/TransmissionEnum'
        mileage:
          type: integer
          minimum: 0
        price:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
      required:
      - brand
      - fuel_type
      - mileage
      - model
      - price
      - transmission
      - year
    FuelTypeEnum:
      enum:
      - бензин
      - дизель
      - электричество
      - гибрид
      type: string
      description: |-
        * `бензин` - Бензин
        * `дизель` - Дизель
        * `электричество` - Электричество
        * `гибрид` - Гибрид
    PaginatedCarList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Car'
    PatchedCar:
      type: object
      properties:
        brand:
          type: string
          maxLength: 128
        model:
          type: string
          maxLength: 256
        year:
          type: integer
          maximum: 2024
          minimum: 1886
        fuel_type:
          $ref: '#/components/schemas/FuelTypeEnum'
        transmission:
          $ref: '#/components/schemas/TransmissionEnum'
        mileage:
          type: integer
          minimum: 0
        price:
          type: number
          format: double
          maximum: 100000000
          minimum: -100000000
          exclusiveMaximum: true
          exclusiveMinimum: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    TransmissionEnum:
      enum:
      - механическая
      - автоматическая
      - вариатор
      - робот
      type: string
      description: |-
        * `механическая` - Механическая
        * `автоматическая` - Автоматическая
        * `вариатор` - Вариатор
        * `робот` - Робот
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
